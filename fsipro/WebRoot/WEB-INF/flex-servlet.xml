<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:flex="http://www.springframework.org/schema/flex"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/flex 
		http://www.springframework.org/schema/flex/spring-flex-1.5.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
 
 	<!-- Spring BlazeDS Integration 特征
•MessageBroker（BlazeDS 的核心组件）被配置为 Spring 管理的 Bean
•Flex 客户端发出的 HTTP 消息通过 Spring 的 DispatcherServlet 路由给 MessageBroker
•Remote objects 以 Spring 的方式配置在 Spring 配置文件内
 -->
 	<context:component-scan base-package="com.fsipro.flex.services" use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Service" type="annotation"/>
	</context:component-scan>
	<!--  context:component-scan base-package="com.fsipro.flex.services"/-->
 	<mvc:annotation-driven/>
 	
 	<mvc:default-servlet-handler/>
 	
 	<!-- Flex-specific Configuration <flex:message-broker/>-->
	<flex:message-broker mapping-order="1">
		<flex:mapping pattern="/messagebroker/*"/>
		<flex:message-service
			default-channels="my-amf" />
	</flex:message-broker>
	 <bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
 		<property name="mediaTypes">
			<map>
				<entry key="amf" value="application/x-amf"/>
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.flex.http.AmfView" />
			</list>
		</property>
 	</bean>

</beans>